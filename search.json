[{"path":"https://nshen7.github.io/decemedip/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 decemedip authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"use decemedip published research, please cite: Shen, Ning, Keegan Korthauer. “decemedip: hierarchical Bayesian modeling cell type deconvolution immunoprecipitation-based DNA methylome” bioRxiv, forthcoming.","code":""},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"package submitted Bioconductor. now, can install development version GitHub: installation, load decemedip package:","code":"# Install stable version from Bioconductor (once available) # BiocManager::install(\"decemedip\")  # Install development version from GitHub remotes::install_github(\"nshen7/decemedip\") library(SummarizedExperiment) library(dplyr) library(ggplot2) library(decemedip) options(digits = 2)"},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"Cell-free bulk DNA methylation data obtained MeDIP-seq reflect mixture methylation signals across multiple cell types. Decomposing signals infer cell type composition can provide valuable insights cancer diagnosis, immune response monitoring, biomedical applications. However, challenges like enrichment-induced biases sparse reference data make task complex. decemedip package addresses challenges hierarchical Bayesian framework estimates cell type proportions models relationship MeDIP-seq counts reference methylation data. decemedip couples logit-normal model generalize additive model (GAM) framework. site ∈{1,...,N}\\\\{1, ..., N\\} reference panel, input model fractional methylation levels xikx_{ik} cell type k∈{1,...,K}k \\\\{1, ..., K\\}, CpG density level ziz_i MeDIP-seq read count yiy_i, KK total number cell types. unit simplex variable follows logit-normal prior, 𝛑=(π1,...,πK)\\boldsymbol{\\pi} = (\\pi_1, ..., \\pi_K) πk>0,∑k=1Kπk=1\\pi_k > 0, \\sum_{k=1}^K \\pi_k = 1, included describe proportions cell types reference panel taking account correlations cell types.","code":""},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input Data","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"decemedip requires three primary inputs: Reference methylation matrix: matrix methylation levels multiple cell types selected CpG sites. CpG density: Information CpG site density genome. MeDIP-seq read counts: Coverage values sample interest.","code":""},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"reference-panel","dir":"Articles","previous_headings":"Input Data","what":"Reference panel","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"package provides default reference matrices hg19 hg38 along corresponding CpG density information, objects class SummarizedExperiment. objects can accessed calling data(hg19.ref.cts.se) data(hg19.ref.anc.se), data(hg38.ref.cts.se) data(hg38.ref.anc.se). default, main function decemedip() applies hg19.ref.cts.se hg19.ref.anc.se reference panels. Please refer manuscript details default reference panels constructed. side note, provide function makeReferencePanel() allow user build reference panels, requires input reference CpGs corresponded fractional methylation level matrix. function computes CpG density . Note cell type-specific sites anchor sites need included two SummarizedExperiment objects inputs main function decemedip(). See ?makeReferencePanel information. show reference panel look like following chunks:","code":"data(hg19.ref.cts.se) print(hg19.ref.cts.se) ## class: RangedSummarizedExperiment  ## dim: 2500 25  ## metadata(0): ## assays(1): beta ## rownames(2500): cg18856478 cg20820767 ... cg01071459 cg20726993 ## rowData names(4): probe label pos n_cpgs_100bp ## colnames(25): Monocytes_EPIC B-cells_EPIC ... Upper_GI Uterus_cervix ## colData names(0): head(granges(hg19.ref.cts.se)) ## GRanges object with 6 ranges and 4 metadata columns: ##              seqnames    ranges strand |       probe                  label ##                 <Rle> <IRanges>  <Rle> | <character>            <character> ##   cg18856478     chr1  43814358      * |  cg18856478 Monocytes_EPIC hyper.. ##   cg20820767     chr1  45082840      * |  cg20820767 Monocytes_EPIC hyper.. ##   cg14855367     chr3 191048308      * |  cg14855367 Monocytes_EPIC hyper.. ##   cg25913761    chr15  90727560      * |  cg25913761 Monocytes_EPIC hyper.. ##   cg21546950     chr1  77904032      * |  cg21546950 Monocytes_EPIC hyper.. ##   cg14981189    chr10   5113871      * |  cg14981189 Monocytes_EPIC hyper.. ##                    pos n_cpgs_100bp ##              <integer>    <integer> ##   cg18856478  43814358            7 ##   cg20820767  45082840           12 ##   cg14855367 191048308            1 ##   cg25913761  90727560            4 ##   cg21546950  77904032            1 ##   cg14981189   5113871            1 ##   ------- ##   seqinfo: 22 sequences from hg19 genome; no seqlengths data(hg19.ref.anc.se) print(hg19.ref.anc.se) ## class: RangedSummarizedExperiment  ## dim: 1000 25  ## metadata(0): ## assays(1): beta ## rownames(1000): 353534 76294 ... 73948 87963 ## rowData names(7): probe pos ... avg_beta_rank n_cpgs_100bp ## colnames(25): Monocytes_EPIC B-cells_EPIC ... Upper_GI Uterus_cervix ## colData names(0): head(granges(hg19.ref.anc.se)) ## GRanges object with 6 ranges and 7 metadata columns: ##          seqnames    ranges strand |       probe       pos        label ##             <Rle> <IRanges>  <Rle> | <character> <integer>  <character> ##   353534    chr19  19496477      * |  cg15264323  19496477 All-tissue U ##    76294     chr1 154193656      * |  cg13576006 154193656 All-tissue U ##   300825    chr12    860787      * |  cg13284045    860787 All-tissue U ##   369864     chr5  43514988      * |  cg20545087  43514988 All-tissue U ##   247131    chr16    278788      * |  cg06819375    278788 All-tissue U ##   308091    chr12  96429111      * |  cg09725090  96429111 All-tissue U ##             margin  avg_beta avg_beta_rank n_cpgs_100bp ##          <numeric> <numeric>     <numeric>    <integer> ##   353534       0.1  0.063240       70720.0           10 ##    76294       0.1  0.013492       19877.5            7 ##   300825       0.1  0.029155       36307.5            1 ##   369864       0.1  0.038771       45387.5            6 ##   247131       0.1  0.032970       39748.5            2 ##   308091       0.1  0.076555       77269.0            7 ##   ------- ##   seqinfo: 22 sequences from hg19 genome; no seqlengths"},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"fit-the-bayesian-model","dir":"Articles","previous_headings":"","what":"Fit the Bayesian Model","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"main function decemedip() fits decemedip model. allows two types input: BAM file sample MeDIP-seq data, read counts reference CpG sites sample. provide instructions input types follows.","code":""},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"input-with-a-bam-file","dir":"Articles","previous_headings":"Fit the Bayesian Model","what":"Input with a BAM file","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"PS: default, decemedip() function uses hg19 reference panel. users may add arguments ref_cts = hg38.ref.cts.se, ref_anc = hg38.ref.anc.se apply read counts extraction hg38 data.","code":"sample_bam_file <- \"path/to/bam/files\" paired <- TRUE # whether the sequencing is paired-end output <- decemedip(sample_bam_file = sample_bam_file,                      paired = paired,                      cores = 4)"},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"input-with-read-counts","dir":"Articles","previous_headings":"Fit the Bayesian Model","what":"Input with read counts","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"use built-objects package contains read counts prostate tumor patient-derived xenograft (PDX) samples Berchuck et al. 2022 [1] study, pdx.counts.cts.se pdx.counts.anc.se, demonstrate output diagnostics vignette. [1] Berchuck JE, Baca SC, McClure HM, Korthauer K, Tsai HK, Nuzzo PV, et al. Detecting neuroendocrine prostate cancer tissue-informed cell-free DNA methylation analysis. Clinical Cancer Research. 2022;28(5):928–938. extract sample LuCaP_147CR example dataset follwing illustration: Due vignette running time limit Bioconductor, run 300 iterations (iter = 300) purpose demonstration, causes warning Bulk Effective Samples Size (ESS) low. regular cases, recommend run 2000 iterations (default), least 1000 iterations stable posterior inference. output decemedip() list containing two elements: data_list: organized list variables used input Stan posterior sampling function. posterior: stanfit object produced Stan representing fitted posteriors.","code":"data(pdx.counts.cts.se) data(pdx.counts.anc.se) counts_cts <- assays(pdx.counts.cts.se)$counts[,'LuCaP_147CR'] # read counts of cell type-specific CpGs of the sample 'LuCaP_147CR' counts_anc <- assays(pdx.counts.anc.se)$counts[,'LuCaP_147CR'] # read counts of anchor CpGs of the sample 'LuCaP_147CR' output <- decemedip(counts_cts = counts_cts,                     counts_anc = counts_anc,                     diagnostics = TRUE,                     cores = 4,                     iter = 200) ## MCMC converged with seed 2024 names(output) ## [1] \"data_list\" \"posterior\""},{"path":[]},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"cell-type-proportions","dir":"Articles","previous_headings":"Checking model outputs","what":"Cell type proportions","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"running model, may extract save summary fitted posteriors using monitor() extract() functions provided RStan package. See documentation RStan details functions. Extract fitted posterior cell type proportions (𝛑\\boldsymbol\\pi): cell_type: name parameter variable analyzed. mean: posterior mean, representing point estimate parameter. se_mean: standard error mean, calculated sd / sqrt(n_eff), indicating precision mean estimate. sd: posterior standard deviation, representing spread uncertainty parameter estimate. 2.5%, 25%, 50% (median), 75%, 97.5%: Percentiles posterior distribution, providing summary parameter uncertainty. define 95% credible interval (2.5% 97.5%). n_eff: effective sample size, indicating many independent samples chain produced accounting autocorrelation. Rhat: potential scale reduction factor, measuring chain convergence. Values close 1.00 suggest good convergence. valid: flag indicating whether diagnostic checks (e.g., Rhat n_eff) passed parameter (1 = passed, 0 = potential issues). Plotting fitted cell type proportions credible intervals:","code":"library(rstan) smr_pi.df <- getSummaryOnPi(output$posterior) head(smr_pi.df) ##              cell_type    mean se_mean      sd    2.5%     25%     50%     75% ## pi[1]   Monocytes_EPIC 0.00041 9.9e-05 0.00136 8.7e-14 1.2e-07 2.3e-06 7.4e-05 ## pi[2]     B-cells_EPIC 0.00021 4.6e-05 0.00055 2.7e-13 5.4e-08 4.0e-06 1.0e-04 ## pi[3]  CD4T-cells_EPIC 0.00042 1.2e-04 0.00143 2.4e-13 9.9e-08 4.6e-06 8.1e-05 ## pi[4]    NK-cells_EPIC 0.00040 1.9e-04 0.00262 7.0e-14 2.7e-08 1.4e-06 3.0e-05 ## pi[5]  CD8T-cells_EPIC 0.00049 1.8e-04 0.00264 2.3e-13 8.7e-08 2.2e-06 4.1e-05 ## pi[6] Neutrophils_EPIC 0.00035 1.0e-04 0.00144 1.0e-13 2.8e-08 2.2e-06 5.0e-05 ##        97.5% n_eff Rhat valid ## pi[1] 0.0043   162    1     1 ## pi[2] 0.0017   139    1     1 ## pi[3] 0.0050   142    1     1 ## pi[4] 0.0031   175    1     1 ## pi[5] 0.0049   215    1     1 ## pi[6] 0.0044   205    1     1 labels <- gsub('_', ' ', smr_pi.df$cell_type) labels <- gsub('(.*) EPIC', '\\\\1', labels)  smr_pi.df |>   mutate(cell_type = factor(cell_type, labels = labels)) |>   ggplot(aes(cell_type, mean)) +   geom_linerange(aes(ymin = `2.5%`, ymax = `97.5%`),                   position = position_dodge2(width = 0.035),                  linewidth = 7, alpha = 0.3) +   geom_linerange(aes(ymin = `25%`, ymax = `75%`),                   position = position_dodge2(width = 0.035),                  linewidth = 7, alpha = 1) +   geom_point(position = position_dodge2(width = 0.035),              fill = 'white', shape = 21, size = 8) +   theme_classic() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))"},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"fitted-relationship-between-fractional-methylation-and-medip-seq-counts","dir":"Articles","previous_headings":"Checking model outputs","what":"Fitted relationship between fractional methylation and MeDIP-seq counts","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"Note plot accessible diagnostics set toTRUE decemedip() function. actual read counts (orange) fitted counts predicted GAM component (black) shown figure across varying levels CpG density. Grey area represents 95% credible intervals predicted counts. `CpG density: x’ means x CpGs 100-bp window surrounding CpG.","code":"plotDiagnostics(output, plot_type = \"y_fit\") +   ylim(0, 300)"},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"decemedip package provides robust framework cell type deconvolution MeDIP-seq data. following vignette, users can apply method datasets, extract key model outputs, generate diagnostic plots analysis.","code":""},{"path":"https://nshen7.github.io/decemedip/articles/how-to-use-decemedip.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Cell type deconvolutiond of (cf)MeDIP-seq data with decemedip","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] rstan_2.32.7                StanHeaders_2.32.10         ##  [3] decemedip_0.99.1            testthat_3.2.3              ##  [5] ggplot2_3.5.2               dplyr_1.1.4                 ##  [7] SummarizedExperiment_1.38.1 Biobase_2.68.0              ##  [9] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         ## [11] IRanges_2.42.0              S4Vectors_0.46.0            ## [13] BiocGenerics_0.54.0         generics_0.1.4              ## [15] MatrixGenerics_1.20.0       matrixStats_1.5.0           ## [17] BiocStyle_2.36.0            ##  ## loaded via a namespace (and not attached): ##   [1] RColorBrewer_1.1-3       rstudioapi_0.17.1        jsonlite_2.0.0           ##   [4] magrittr_2.0.3           farver_2.1.2             rmarkdown_2.29           ##   [7] fs_1.6.6                 BiocIO_1.18.0            ragg_1.4.0               ##  [10] vctrs_0.6.5              memoise_2.0.1            Rsamtools_2.24.0         ##  [13] RCurl_1.98-1.17          usethis_3.1.0            htmltools_0.5.8.1        ##  [16] S4Arrays_1.8.1           progress_1.2.3           curl_6.4.0               ##  [19] SparseArray_1.8.0        sass_0.4.10              bslib_0.9.0              ##  [22] htmlwidgets_1.6.4        desc_1.4.3               httr2_1.1.2              ##  [25] cachem_1.1.0             GenomicAlignments_1.44.0 mime_0.13                ##  [28] lifecycle_1.0.4          pkgconfig_2.0.3          Matrix_1.7-3             ##  [31] R6_2.6.1                 fastmap_1.2.0            GenomeInfoDbData_1.2.14  ##  [34] shiny_1.11.1             digest_0.6.37            ps_1.9.1                 ##  [37] AnnotationDbi_1.70.0     rprojroot_2.0.4          pkgload_1.4.0            ##  [40] textshaping_1.0.1        RSQLite_2.4.1            labeling_0.4.3           ##  [43] filelock_1.0.3           MEDIPS_1.60.0            httr_1.4.7               ##  [46] abind_1.4-8              compiler_4.5.1           remotes_2.5.0            ##  [49] bit64_4.6.0-1            withr_3.0.2              inline_0.3.21            ##  [52] BiocParallel_1.42.1      DBI_1.2.3                QuickJSR_1.8.0           ##  [55] pkgbuild_1.4.8           R.utils_2.13.0           biomaRt_2.64.0           ##  [58] sessioninfo_1.2.3        rappdirs_0.3.3           DelayedArray_0.34.1      ##  [61] rjson_0.2.23             gtools_3.9.5             DNAcopy_1.82.0           ##  [64] loo_2.8.0                BH_1.87.0-1              tools_4.5.1              ##  [67] httpuv_1.6.16            R.oo_1.27.1              glue_1.8.0               ##  [70] callr_3.7.6              restfulr_0.0.16          promises_1.3.3           ##  [73] grid_4.5.1               gtable_0.3.6             BSgenome_1.76.0          ##  [76] R.methodsS3_1.8.2        preprocessCore_1.70.0    hms_1.1.3                ##  [79] xml2_1.3.8               XVector_0.48.0           pillar_1.11.0            ##  [82] stringr_1.5.1            later_1.4.2              BiocFileCache_2.16.0     ##  [85] lattice_0.22-7           rtracklayer_1.68.0       bit_4.6.0                ##  [88] tidyselect_1.2.1         Biostrings_2.76.0        miniUI_0.1.2             ##  [91] knitr_1.50               gridExtra_2.3            bookdown_0.43            ##  [94] xfun_0.52                brio_1.1.5               devtools_2.4.5           ##  [97] stringi_1.8.7            UCSC.utils_1.4.0         yaml_2.3.10              ## [100] evaluate_1.0.4           codetools_0.2-20         RcppEigen_0.3.4.0.2      ## [103] tibble_3.3.0             BiocManager_1.30.26      cli_3.6.5                ## [106] RcppParallel_5.1.10      xtable_1.8-4             systemfonts_1.2.3        ## [109] processx_3.8.6           jquerylib_0.1.4          Rcpp_1.1.0               ## [112] dbplyr_2.5.0             png_0.1-8                XML_3.99-0.18            ## [115] parallel_4.5.1           rstantools_2.4.0         ellipsis_0.3.2           ## [118] pkgdown_2.1.3            blob_1.2.4               prettyunits_1.2.0        ## [121] profvis_0.4.0            bayesplot_1.13.0         urlchecker_1.0.1         ## [124] bitops_1.0-9             scales_1.4.0             purrr_1.1.0              ## [127] crayon_1.5.3             rlang_1.1.6              cowplot_1.2.0            ## [130] KEGGREST_1.48.1"},{"path":"https://nshen7.github.io/decemedip/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ning Shen. Author, maintainer.","code":""},{"path":"https://nshen7.github.io/decemedip/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shen N (2025). decemedip: hierarchical Bayesian modeling cell type deconvolution immunoprecipitation-based DNA methylome. R package version 0.99.1.","code":"@Manual{,   title = {decemedip: hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome},   author = {Ning Shen},   year = {2025},   note = {R package version 0.99.1}, }"},{"path":"https://nshen7.github.io/decemedip/index.html","id":"decemedip-cell-type-deconvolution-of-cellfree-dna-via-bayesian-hierarchical-modeling","dir":"","previous_headings":"","what":"hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome","title":"hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome","text":"R package decemedip novel computational paradigm developed inferring relative abundances cell types tissues tissue bulk circulating cell-free DNA (cfDNA) measure methylated DNA immunoprecipitation sequencing (MeDIP-Seq). paradigm allows using reference data technologies microarray WGBS.","code":""},{"path":"https://nshen7.github.io/decemedip/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome","text":"can install development version decemedip R GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"nshen7/decemedip\")"},{"path":"https://nshen7.github.io/decemedip/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome","text":"online vignette decemedip package can found https://rpubs.com/nshen7/--use-decemedip.","code":""},{"path":"https://nshen7.github.io/decemedip/index.html","id":"how-to-get-help-for-decemedip","dir":"","previous_headings":"","what":"How to get help for decemedip","title":"hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome","text":"questions suggestions regarding decemedip package, please feel free raise issue GitHub page alternatively email author, Ning, ning.shen.wk@gmail.com.","code":""},{"path":"https://nshen7.github.io/decemedip/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"hierarchical Bayesian modeling for cell type deconvolution of immunoprecipitation-based DNA methylome","text":"Manuscript currently development.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'decemedip' package. — decemedip-package","title":"The 'decemedip' package. — decemedip-package","text":"R package decemedip novel computational paradigm developed inferring relative abundances cell types tissues tissue bulk circulating cell-free DNA (cfDNA) measure methylated DNA immunoprecipitation sequencing (MeDIP-Seq). paradigm allows using reference data technologies microarray WGBS.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'decemedip' package. — decemedip-package","text":"Stan Development Team (NA). RStan: R interface Stan. R package version 2.32.6. https://mc-stan.org","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'decemedip' package. — decemedip-package","text":"Maintainer: Ning Shen ning.shen.wk@gmail.com (ORCID)","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function to perform cell type deconvolution with MeDIP-seq data — decemedip","title":"Main function to perform cell type deconvolution with MeDIP-seq data — decemedip","text":"Main function perform cell type deconvolution MeDIP-seq data","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function to perform cell type deconvolution with MeDIP-seq data — decemedip","text":"","code":"decemedip(   sample_bam_file = NULL,   paired_end = NULL,   counts_cts = c(),   counts_anc = c(),   ref_assembly = \"hg19\",   ref_cts = NULL,   ref_anc = NULL,   weight_cts = 1,   weight_anc = 0.5,   diagnostics = TRUE,   seed = 2024,   cores = 4,   chains = 4,   iter = 2000,   stan_input_params = list(s_mu = 3, s_sigma = 3, n_knot_z = 0, degree_z = 3, Xi =     cor(as.matrix(SummarizedExperiment::assays(ref_cts)[[1]])), s_theta = 3, s_tau = 3),   stan_control = list(adapt_delta = 0.95, max_treedepth = 15),   timeout_sec = 2 * (diagnostics + 1) * iter * chains,   max_retries = 3,   ... )"},{"path":"https://nshen7.github.io/decemedip/reference/decemedip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function to perform cell type deconvolution with MeDIP-seq data — decemedip","text":"sample_bam_file string value indicates file path bam file MeDIP-seq sample interest. sample_bam_file specified, please specify counts_cts counts_anc avoid conflict. paired_end logic value indicates whether bam file paired-end reads single-end. Specify TRUE paired-end FALSE single-end. counts_cts atomic vector integer values indicates read counts MeDIP-seq sample reference sites/regions. counts_cts counts_anc specified, please specify sample_bam_file paired_end avoid conflict. counts_anc atomic vector integer values indicates read counts MeDIP-seq sample reference sites/regions.  counts_cts counts_anc specified, please specify sample_bam_file paired_end avoid conflict. ref_assembly string represents genome assembly used cell type-specific sites reference panel ('hg19' 'hg38'). Default 'hg19'. default reference explained manuscript decemedip. Alternatively, user want provide reference panel using ref_cts ref_anc arguments. ref_cts SummarizedExperiment object contains genomic coordinates beta values cell type-specific sites/regions reference cell types. makeReferencePanel can used generate panel. ref_anc ref_cts anchor sites. weight_cts numeric value indicating weights put cell type-specific sites/regions. Default 0.5. weight_anc numeric value indicating weights put cell type-specific sites/regions. Default 1. diagnostics logic value indicates whether include components stan model output necessary future diagnostics model, posterior predictive checks. details, please refer function plotDiagnostics. seed seed random number generation MCMC sampling. cores positive integer specifying number cores can used MCMC sampling. default 4 chains positive integer specifying number Markov chains. default 4. iter positive integer specifying number iterations chain (including warmup). default 2000. stan_input_params named list parameters specifies prior decemedip model. stan_control named list parameters control sampler's behavior Stan. See details documentation control argument stan. timeout_sec numerical value indicating CPU/processor time (seconds) allowed MCMC run restarting chains new random seed. max_retries integer value indicating maximum number tries different seed MCMC fails converge. ... parameters can passed sampling function.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function to perform cell type deconvolution with MeDIP-seq data — decemedip","text":"list two elements: data_list: organized list variables used input Stan posterior sampling function. posterior: stanfit object produced Stan representing fitted posteriors.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/decemedip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main function to perform cell type deconvolution with MeDIP-seq data — decemedip","text":"","code":"data(pdx.counts.cts.se) data(pdx.counts.anc.se) # read counts of cell type-specific CpGs of the sample 'LuCaP_147CR' counts_cts <- SummarizedExperiment::assays(pdx.counts.cts.se)$counts[,'LuCaP_147CR'] # read counts of anchor CpGs of the sample 'LuCaP_147CR' counts_anc <- SummarizedExperiment::assays(pdx.counts.anc.se)$counts[,'LuCaP_147CR'] # Fit decemedip model (iter=100 for demonstration, by default iter=2000) output <- decemedip(counts_cts = counts_cts, counts_anc = counts_anc, iter = 100, cores = 1, chains = 1) #>  #> SAMPLING FOR MODEL 'decemedip1' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 0.00176 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 17.6 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: WARNING: There aren't enough warmup iterations to fit the #> Chain 1:          three stages of adaptation as currently configured. #> Chain 1:          Reducing each adaptation stage to 15%/75%/10% of #> Chain 1:          the given number of warmup iterations: #> Chain 1:            init_buffer = 7 #> Chain 1:            adapt_window = 38 #> Chain 1:            term_buffer = 5 #> Chain 1:  #> Chain 1: Iteration:  1 / 100 [  1%]  (Warmup) #> Chain 1: Iteration: 10 / 100 [ 10%]  (Warmup) #> Chain 1: Iteration: 20 / 100 [ 20%]  (Warmup) #> Chain 1: Iteration: 30 / 100 [ 30%]  (Warmup) #> Chain 1: Iteration: 40 / 100 [ 40%]  (Warmup) #> Chain 1: Iteration: 50 / 100 [ 50%]  (Warmup) #> Chain 1: Iteration: 51 / 100 [ 51%]  (Sampling) #> Chain 1: Iteration: 60 / 100 [ 60%]  (Sampling) #> Chain 1: Iteration: 70 / 100 [ 70%]  (Sampling) #> Chain 1: Iteration: 80 / 100 [ 80%]  (Sampling) #> Chain 1: Iteration: 90 / 100 [ 90%]  (Sampling) #> Chain 1: Iteration: 100 / 100 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 33.222 seconds (Warm-up) #> Chain 1:                21.935 seconds (Sampling) #> Chain 1:                55.157 seconds (Total) #> Chain 1:  #> Warning: The largest R-hat is NA, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess #> MCMC converged with seed 2024"},{"path":"https://nshen7.github.io/decemedip/reference/getRoiReadCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain read counts of regions of interest from MeDIP-seq bam files — getRoiReadCount","title":"Obtain read counts of regions of interest from MeDIP-seq bam files — getRoiReadCount","text":"Obtain read counts regions interest MeDIP-seq bam files","code":""},{"path":"https://nshen7.github.io/decemedip/reference/getRoiReadCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain read counts of regions of interest from MeDIP-seq bam files — getRoiReadCount","text":"","code":"getRoiReadCount(   sample_bam_files,   sample_names,   sample_paired,   roi,   col_data = NULL,   row_data = NULL,   bs_genome = \"BSgenome.Hsapiens.UCSC.hg19\",   ... )"},{"path":"https://nshen7.github.io/decemedip/reference/getRoiReadCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain read counts of regions of interest from MeDIP-seq bam files — getRoiReadCount","text":"sample_bam_files atomic vector contains directory paths MeDIP-seq sorted bam files. sample_names atomic vector strings indicates sample names. Default NULL. NULL, please make sure sample_names corresponds elements sample_bam_files. sample_paired logic value indicates sample_paired-end reads (TRUE) single-end reads (FALSE). roi GRanges object contains genomic coordinates region interest (ROI). col_data DataFrame object contains metadata columns (.e., samples) specified. Default NULL. NULL, please make sure rows col_data corresponds elements sample_bam_files. input non-DataFrame object, converted DataFrame. row_data DataFrame object contains metadata rows (.e., genomic regions) specified. Default NULL. NULL, please make sure rows row_data corresponds elements sample_bam_files. input non-DataFrame object, converted DataFrame. bs_genome character value indicates reference genome name defined BSgenome package. Default 'BSgenome.Hsapiens.UCSC.hg19'. ... Additional arguments passed MEDIPS::MEDIPS.createROIset","code":""},{"path":"https://nshen7.github.io/decemedip/reference/getRoiReadCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain read counts of regions of interest from MeDIP-seq bam files — getRoiReadCount","text":"object class SummarizedExperiment read count matrix stored assay named 'counts' (can extracted using SummarizedExperiment::assays)","code":""},{"path":"https://nshen7.github.io/decemedip/reference/getRoiReadCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain read counts of regions of interest from MeDIP-seq bam files — getRoiReadCount","text":"","code":"# \\donttest{ se <- getRoiReadCount(  sample_bam_files = c('dir/to/bam1','dir/to/bam2'),  sample_names = c('sample1', 'sample2'),  sample_paired = TRUE ) #> Error in getRoiReadCount(sample_bam_files = c(\"dir/to/bam1\", \"dir/to/bam2\"),     sample_names = c(\"sample1\", \"sample2\"), sample_paired = TRUE): argument \"roi\" is missing, with no default # }"},{"path":"https://nshen7.github.io/decemedip/reference/getSummaryOnPi.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract summary statistics and diagnostics on fitted cell type proportions — getSummaryOnPi","title":"Extract summary statistics and diagnostics on fitted cell type proportions — getSummaryOnPi","text":"Extract summary statistics diagnostics fitted cell type proportions","code":""},{"path":"https://nshen7.github.io/decemedip/reference/getSummaryOnPi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract summary statistics and diagnostics on fitted cell type proportions — getSummaryOnPi","text":"","code":"getSummaryOnPi(   posterior,   probs = c(0.025, 0.25, 0.5, 0.75, 0.975),   digits_summary = 5,   cell_type_names = NULL,   ... )"},{"path":"https://nshen7.github.io/decemedip/reference/getSummaryOnPi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract summary statistics and diagnostics on fitted cell type proportions — getSummaryOnPi","text":"posterior fitted posterior object decemedip model. probs numeric vector specifying quantiles interest. defaults c(0.025,0.25,0.5,0.75,0.975). digits_summary number significant digits use summary, defaulting 5. cell_type_names Name cell types reference panel. order align order reference panel. ... Additional arguments get passed rstan::monitor function.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/getSummaryOnPi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract summary statistics and diagnostics on fitted cell type proportions — getSummaryOnPi","text":"data.frame object containg summary statistics diagnostic statistics fitted cell type proportions.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/getSummaryOnPi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract summary statistics and diagnostics on fitted cell type proportions — getSummaryOnPi","text":"","code":"data(pdx.counts.cts.se) data(pdx.counts.anc.se) # read counts of cell type-specific CpGs of the sample 'LuCaP_147CR' counts_cts <- SummarizedExperiment::assays(pdx.counts.cts.se)$counts[,'LuCaP_147CR'] # read counts of anchor CpGs of the sample 'LuCaP_147CR' counts_anc <- SummarizedExperiment::assays(pdx.counts.anc.se)$counts[,'LuCaP_147CR'] # Fit decemedip model (iter=100 for demonstration, by default iter=2000) output <- decemedip(counts_cts = counts_cts, counts_anc = counts_anc, iter = 100) #> Warning: The largest R-hat is NA, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess #> MCMC converged with seed 2024  smr_pi.df <- getSummaryOnPi(output$posterior)"},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.anc.se.html","id":null,"dir":"Reference","previous_headings":"","what":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","title":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","text":"dataset represents GRanges object contains collection Illumina HumanMethylation450K probes methylation level less 0.1 greater 0.9 tissue present atlas. Data source MethAtlas GitHub repo (https://github.com/nloyfer/meth_atlas).","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.anc.se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","text":"","code":"data(hg19.ref.anc.se)"},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.anc.se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","text":"object class GRanges.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.anc.se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","text":"coordinates hg19.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.anc.se.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","text":"Moss, J., Magenheim, J., Neiman, D. et al. Comprehensive human cell-type methylation atlas reveals origins circulating cell-free DNA health disease. Nat Commun 9, 5068 (2018).","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.anc.se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hg19 genomic information of anchor CpGs (i.e., all-tissue unmethylated/methylation probes) inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). Used as default in decemedip. — hg19.ref.anc.se","text":"","code":"data(hg19.ref.anc.se)   hg19.ref.anc.se #> class: RangedSummarizedExperiment  #> dim: 1000 25  #> metadata(0): #> assays(1): beta #> rownames(1000): 353534 76294 ... 73948 87963 #> rowData names(7): probe pos ... avg_beta_rank n_cpgs_100bp #> colnames(25): Monocytes_EPIC B-cells_EPIC ... Upper_GI Uterus_cervix #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.cts.se.html","id":null,"dir":"Reference","previous_headings":"","what":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","title":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","text":"Default reference cell type-specific markers used default decemedip. dataset represents GRanges object contains collection Illumina HumanMethylation450K probes methylation level less 0.1 greater 0.9 tissue present atlas. Data source methylation atlas MethAtlas GitHub repo (https://github.com/nloyfer/meth_atlas). details marker CpGs selected, please refer decemedip manuscript.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.cts.se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","text":"","code":"data(hg19.ref.cts.se)"},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.cts.se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","text":"object class GRanges. rowData(hg19.ref.cts.se) contains information selected probes.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.cts.se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","text":"coordinates hg19.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.cts.se.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","text":"Moss, J., Magenheim, J., Neiman, D. et al. Comprehensive human cell-type methylation atlas reveals origins circulating cell-free DNA health disease. Nat Commun 9, 5068 (2018). https://doi.org/10.1038/s41467-018-07466-6","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg19.ref.cts.se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hg19 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg19.ref.cts.se","text":"","code":"data(hg19.ref.cts.se)   hg19.ref.cts.se #> class: RangedSummarizedExperiment  #> dim: 2500 25  #> metadata(0): #> assays(1): beta #> rownames(2500): cg18856478 cg20820767 ... cg01071459 cg20726993 #> rowData names(4): probe label pos n_cpgs_100bp #> colnames(25): Monocytes_EPIC B-cells_EPIC ... Upper_GI Uterus_cervix #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.anc.se.html","id":null,"dir":"Reference","previous_headings":"","what":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.anc.se","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.anc.se","text":"data(hg19.ref.anc.se) lifted hg38.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.anc.se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.anc.se","text":"","code":"data(hg38.ref.anc.se)"},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.anc.se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.anc.se","text":"object class GRanges. object class GRanges.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.anc.se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.anc.se","text":"coordinates hg38.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.anc.se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.anc.se","text":"","code":"data(hg38.ref.anc.se)   hg38.ref.anc.se #> class: RangedSummarizedExperiment  #> dim: 1000 25  #> metadata(0): #> assays(1): beta #> rownames(1000): 353534 76294 ... 73948 87963 #> rowData names(7): probe pos ... avg_beta_rank n_cpgs_100bp #> colnames(25): Monocytes_EPIC B-cells_EPIC ... Upper_GI Uterus_cervix #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.cts.se.html","id":null,"dir":"Reference","previous_headings":"","what":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.cts.se","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.cts.se","text":"data(hg19.ref.cts.se) lifted hg38.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.cts.se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.cts.se","text":"","code":"data(hg38.ref.cts.se)"},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.cts.se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.cts.se","text":"object class GRanges. object class GRanges.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.cts.se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.cts.se","text":"coordinates hg38.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/hg38.ref.cts.se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hg38 genomic information of cell-type-specific marker CpGs inferred from DNA methylation atlas published by Moss 2018 Nat. Commun. (https://www.nature.com/articles/s41467-018-07466-6). — hg38.ref.cts.se","text":"","code":"data(hg38.ref.cts.se)   hg38.ref.cts.se #> class: RangedSummarizedExperiment  #> dim: 2499 25  #> metadata(0): #> assays(1): beta #> rownames(2499): cg18856478 cg20820767 ... cg01071459 cg20726993 #> rowData names(4): probe label pos n_cpgs_100bp #> colnames(25): Monocytes_EPIC B-cells_EPIC ... Upper_GI Uterus_cervix #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/makeReferencePanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for assembling a SummarizedExperiment object of reference panel in hg19 for cell type deconvolution (which is used in decemedip function) — makeReferencePanel","title":"Function for assembling a SummarizedExperiment object of reference panel in hg19 for cell type deconvolution (which is used in decemedip function) — makeReferencePanel","text":"Function assembling SummarizedExperiment object reference panel hg19 cell type deconvolution (used decemedip function)","code":""},{"path":"https://nshen7.github.io/decemedip/reference/makeReferencePanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for assembling a SummarizedExperiment object of reference panel in hg19 for cell type deconvolution (which is used in decemedip function) — makeReferencePanel","text":"","code":"makeReferencePanel(   row_ranges,   X,   cpg_coords,   col_names = NULL,   row_names = NULL,   col_data = NULL,   row_data = NULL )"},{"path":"https://nshen7.github.io/decemedip/reference/makeReferencePanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for assembling a SummarizedExperiment object of reference panel in hg19 for cell type deconvolution (which is used in decemedip function) — makeReferencePanel","text":"row_ranges GRanges object contains genomic coordinates reference regions/sites. X matrix contains beta values reference regions. row region column cell type. X row names column names, output SummarizedExperiment object inherit . cpg_coords GRanges object contains genomic coordinates CpGs genome. ready--use CpG list hg19 available download https://github.com/nshen7/decemedip-experiments/blob/main/hg19.cpg.coords.rda. used generating coloum n_cpg_100bp reference panel, represents CpG density around reference CpG. col_names atomic vector strings indicates column names, .e., names cell types. Default NULL. NULL, column names X overwritten argument. row_names atomic vector strings indicates row names, .e., names reference regions. Default NULL. NULL, row names X overwritten argument. col_data DataFrame object contains metadata columns (.e., cell types) specified. row col_data contain info cell type X. input non-DataFrame object, converted DataFrame. Default NULL. row_data DataFrame object contains metadata row (.e., reference regions) specified. row row_data contain info reference region X. input non-DataFrame object, converted DataFrame. Default NULL.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/makeReferencePanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for assembling a SummarizedExperiment object of reference panel in hg19 for cell type deconvolution (which is used in decemedip function) — makeReferencePanel","text":"SummarizedExperiment object row represents reference region assay named 'X' stores beta values reference regions.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/makeReferencePanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for assembling a SummarizedExperiment object of reference panel in hg19 for cell type deconvolution (which is used in decemedip function) — makeReferencePanel","text":"","code":"row_ranges <- GenomicRanges::GRanges(   seqnames = S4Vectors::Rle(c(\"chr1\", \"chr2\", \"chr3\")),   ranges = IRanges::IRanges(start = c(100, 200, 300),                             end = c(100, 200, 300)),   cpg_id = c(\"cpg_1\", \"cpg_2\", \"cpg_3\")      # CpG site IDs )  cpg_coords = GenomicRanges::GRanges(   seqnames = S4Vectors::Rle(c(\"chr1\", \"chr1\", \"chr2\", \"chr2\", \"chr3\", \"chr3\")),   ranges = IRanges::IRanges(start = c(100, 101, 200, 201, 300, 301),                             end = c(100, 101, 200, 201, 300, 301)) )  X = matrix(runif(6), nrow = 3)  makeReferencePanel(   row_ranges = row_ranges,   X = X,   cpg_coords = cpg_coords ) #> class: RangedSummarizedExperiment  #> dim: 3 2  #> metadata(0): #> assays(1): beta #> rownames: NULL #> rowData names(2): cpg_id n_cpgs_100bp #> colnames: NULL #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.anc.se.html","id":null,"dir":"Reference","previous_headings":"","what":"MeDIP-seq read counts on reference anchor CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.anc.se","title":"MeDIP-seq read counts on reference anchor CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.anc.se","text":"dataset represents SummarizedExperiment object contains MeDIP-seq read counts reference anchor CpGs 3 PDX samples Berchuck et al. 2022. row CpG.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.anc.se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MeDIP-seq read counts on reference anchor CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.anc.se","text":"","code":"data(pdx.counts.anc.se)"},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.anc.se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MeDIP-seq read counts on reference anchor CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.anc.se","text":"object class SummarizedExperiment.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.anc.se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MeDIP-seq read counts on reference anchor CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.anc.se","text":"coordinates hg19.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.anc.se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MeDIP-seq read counts on reference anchor CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.anc.se","text":"","code":"data(pdx.counts.anc.se)   pdx.counts.anc.se #> class: RangedSummarizedExperiment  #> dim: 1000 3  #> metadata(0): #> assays(1): counts #> rownames(1000): 353534 76294 ... 73948 87963 #> rowData names(7): probe pos ... avg_beta_rank n_cpgs_100bp #> colnames(3): LuCaP_147CR LuCap_23.1CR LuCaP_70CR #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.cts.se.html","id":null,"dir":"Reference","previous_headings":"","what":"MeDIP-seq read counts on reference cell type-specific CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.cts.se","title":"MeDIP-seq read counts on reference cell type-specific CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.cts.se","text":"dataset represents SummarizedExperiment object contains MeDIP-seq read counts reference cell type-specific CpGs 3 PDX samples Berchuck et al. 2022. row CpG.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.cts.se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MeDIP-seq read counts on reference cell type-specific CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.cts.se","text":"","code":"data(pdx.counts.cts.se)"},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.cts.se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MeDIP-seq read counts on reference cell type-specific CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.cts.se","text":"object class SummarizedExperiment.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.cts.se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MeDIP-seq read counts on reference cell type-specific CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.cts.se","text":"coordinates hg19.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/pdx.counts.cts.se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MeDIP-seq read counts on reference cell type-specific CpGs of 3 PDX samples from Berchuck et al. 2022 — pdx.counts.cts.se","text":"","code":"data(pdx.counts.cts.se)   pdx.counts.cts.se #> class: RangedSummarizedExperiment  #> dim: 2500 3  #> metadata(0): #> assays(1): counts #> rownames(2500): cg18856478 cg20820767 ... cg01071459 cg20726993 #> rowData names(4): probe label pos n_cpgs_100bp #> colnames(3): LuCaP_147CR LuCap_23.1CR LuCaP_70CR #> colData names(0):"},{"path":"https://nshen7.github.io/decemedip/reference/plotDiagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics for model fitting in decemedip — plotDiagnostics","title":"Diagnostics for model fitting in decemedip — plotDiagnostics","text":"Diagnostics model fitting decemedip","code":""},{"path":"https://nshen7.github.io/decemedip/reference/plotDiagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics for model fitting in decemedip — plotDiagnostics","text":"","code":"plotDiagnostics(   decemedip_output,   plot_type,   model_fit_n_samples = 100,   model_fit_label_size = 12,   model_fit_align = \"hv\",   ... )"},{"path":"https://nshen7.github.io/decemedip/reference/plotDiagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics for model fitting in decemedip — plotDiagnostics","text":"decemedip_output output decemedip function. plot_type string value, either 'y_fit' 'model_fit'. plot_type='y_fit' provides fitted MeDIP-seq read counts vs. fractional methylation values, indicating fitted relationship MeDIP-seq counts fractional methylation. plot_type='model_fit' provides set diagnostic plots fitted Stan model. model_fit_n_samples Number randomly selected posterior samples plotting diagnostic plots stan fit. plot_type = 'model_fit' . model_fit_label_size Label size plot grid. plot_type = 'model_fit' . See argument label_size plot_grid details. model_fit_align Specifies graphs grid aligned. See argument align plot_grid details. ... Additional arguments fed plot_grid case plot_type = 'model_fit'.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/plotDiagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostics for model fitting in decemedip — plotDiagnostics","text":"ggplot object.","code":""},{"path":"https://nshen7.github.io/decemedip/reference/plotDiagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics for model fitting in decemedip — plotDiagnostics","text":"","code":"data(pdx.counts.cts.se) data(pdx.counts.anc.se) # read counts of cell type-specific CpGs of the sample 'LuCaP_147CR' counts_cts <- SummarizedExperiment::assays(pdx.counts.cts.se)$counts[,'LuCaP_147CR'] # read counts of anchor CpGs of the sample 'LuCaP_147CR' counts_anc <- SummarizedExperiment::assays(pdx.counts.anc.se)$counts[,'LuCaP_147CR'] # Fit decemedip model (iter=100 for demonstration, by default iter=2000) output <- decemedip(counts_cts = counts_cts, counts_anc = counts_anc, iter = 100) #> Warning: The largest R-hat is NA, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess #> MCMC converged with seed 2024  plotDiagnostics(output, plot_type = \"y_fit\")"},{"path":[]},{"path":"https://nshen7.github.io/decemedip/news/index.html","id":"decemedip-0990","dir":"Changelog","previous_headings":"","what":"decemedip 0.99.0","title":"decemedip 0.99.0","text":"Initial Bioconductor submission.","code":""}]
